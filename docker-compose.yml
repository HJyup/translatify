version: '3.9'
services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4318:4318"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:16686"]
      interval: 30s
      timeout: 10s
      retries: 5

  consul:
    image: hashicorp/consul:1.10.0
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.9.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=translatify_pass
      - POSTGRES_USER=translatify_user
      - POSTGRES_DB=translatify

  chat:
    build:
      context: .
      dockerfile: chat/Dockerfile
    env_file:
      - chat/.env
    ports:
      - "50051:50051"
    depends_on:
      - jaeger
      - consul
      - rabbitmq
      - db

  translation:
    build:
      context: .
      dockerfile: translation/Dockerfile
    env_file:
      - translation/.env
    ports:
      - "4200:4200"
    depends_on:
      - jaeger
      - consul
      - rabbitmq
      - db

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    env_file:
      - gateway/.env
    ports:
      - "8080:8080"
    depends_on:
      - jaeger
      - consul
      - rabbitmq
      - db